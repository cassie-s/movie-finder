//function to get random movies
var getRandomMovie = function (genreId) {
    
    fetch('https://api.themoviedb.org/3/discover/movie?'
    
    + 'api_key=3e05de6918321bc70bb8260fdbd331f3'

    + '&with_genres='

    + genreId)
                              
        .then(response => response.json())
        .then(response => {

            //for(var i = 0; i < response.pages.length; i++ )

            var title = response.results[1].title;
            console.log(title);
            var image = response.results[1].poster_path;
            console.log(image);
            var rating = response.results[1].vote_average;//out of 10
            console.log(rating);
            var description = response.results[1].overview;
            console.log(description);
        });
    };

//start of function for getting combo-box value
$('#genre-combo').change(function () {
    //testing combo box output, can remove
    var genrePickVal = this.value;
    var genrePickText = $( "#genre-combo option:selected" ).text();
    console.log("Value: "+ genrePickVal);
    console.log("Text: "+ genrePickText);

    getRandomMovie(genrePickVal);
});



//commented code abyss of cataclysm

//                          ___......__             _             |
//                         _.-'           ~-_       _.=a~~-_    *\|/*       
// --=====-.-.-_----------~   .--.       _   -.__.-~ ( ___===> ={[0]}===============            <= dino-laser of destruction
//               '''--...__  (    \ \\\ { )       _.-~          */|\*
//                         =_ ~_  \\-~~~//~~~~-=-~                |
//                          |-=-~_ \\   \\
//                          |_/   =. )   ~}
//                          |}      ||
//                         //       ||
//                       _//        {{
//                    '='~'          \\_    
//                                    ~~'

//store tmdb api key to avoid typos
// var tmdbApiKey="api_key=3e05de6918321bc70bb8260fdbd331f3"

// //store utelly api key to avoid typos
// var utellyApiKey="rapidapi-key=bbb550455emsh90631cae1cb42dcp1fb394jsn26315c4b067a"

// //utelly lookup url - needs TMDB movie ID
// var utellyUrlApi = "https://utelly-tv-shows-and-movies-availability-v1.p.rapidapi.com/idlookup?" + utellyApiKey +"&source_id=" + tmdbMovieID+ "&source=tmdb&country=us"


/* above list will always get latest movies.  possible solution is to fetch latest movie, store value
    and then roll random number between 0 and latest movie.  Then randomly pick a number to fetch from the database.
    Would need to check and make sure you get 200 response vs 404 response to display movie.
    
    Suggest:
    1) On load, do initial fetch, grab latest id, or just use 550988
    2) in getrandommovie, do a for each loop until 10 successes, doing random number between 1 and latestId
    3) store output in array
    4) post array to autogenerated cards

    */
 // create the basic tmdb api url for fetching movies
 //var tmdbGenApiUrl = "https://api.themoviedb.org/3/discover/movie?" + tmdbApiKey + "&include_adult=false";

    // request to get url
    fetch(tmdbGenApiUrl).then(function (response) {
        if (response.ok) {
            console.log("Response OK");
            console.log(this);
        } else {
            console.log("Response Not OK");
        }
    });
};

// start of function for getting combo-box value
$('#genre-combo').change(function () {
    //testing combo box output, can remove
    var genrePickVal = this.value;
    var genrePickText = $( "#genre-combo option:selected" ).text();
    console.log("Value: "+ genrePickVal);
    console.log("Text: "+ genrePickText);
});

// save and display bookmarked movies to local storage
var displayBookmarks = function() {
    savedMovies = JSON.parse(localStorage.getItem("movies"));
    
}

let savedMovies = {

}

var bookmarkMovies = function() {
    localStorage.setItem("movies", JSON.stringify(savedMovies))
}

var movies = JSON.parse(localStorage.getItem('movies')) || [];

$("#bookmark-btn").click(function() {

bookmarkMovies();
    
});

displayBookmarks();






 
// request to get url
//     fetch(tmdbGenApiUrl).then(function (response) {
//         if (response.ok) {
//             console.log("Response OK");
//             console.log(this);
//         } else {
//             console.log("Response Not OK");
//         }
//     });
// };
